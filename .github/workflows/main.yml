# This is a basic workflow to help you get started with Actions

name: onex-utils-CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    tags: [v*, V*]

  pull_request:
    tags: [v*, V*]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@master

      - name: Generate coverage report ⏳
        run: |
          npm install
          npm install codecov -g
          npm run test
          codecov -f coverage/*.json

      - name: Deploy codecov 🚀
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          directory: ./coverage
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@master

      - name: Generate build file 🧬
        run: |
          npm install
          npm run build
          npm run tsdoc

      - name: Deploy docs 🚀
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: docs # The folder the action should deploy.
      
      - name: Deploy npm 🚀
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}

  release:
    needs: deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Get Package Version
        uses: nyaa8/package-version@v1

      - name: Get tag Version
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: false

      # Drafts your next Release notes as Pull Requests are merged into "master"
      - name: release 🎉
        uses: release-drafter/release-drafter@v5
        with:
          name: ${{ env.PACKAGE_VERSION }}
          tag: ${{ steps.get-current-tag.outputs.tag }}
          version: ${{ env.PACKAGE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    
